name: On PRs - Windows Special Builds

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - "*.md"
  workflow_dispatch:
  push:
    branches: [main]
    tags:
    - '!*'
    paths-ignore:
      - "*.md"

jobs:
  windows_uwp:
    name: 'Win10 Arch: ${{matrix.platform}} BuildType:${{matrix.build_type}} - SHARED:${{matrix.shared_libraries}}'
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        shared_libraries: [ON, OFF]
        platform: [ x64, x86 ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Visual Studio shell
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.platform}}
          uwp: true

      - name: Restore Conan cache
        uses: actions/cache@v4
        with:
            path: ${{github.workspace}}/conanCache
            key: ${{runner.os}}-${{matrix.platform}}-${{matrix.build_type}}-Shared${{matrix.shared_libraries}}-${{ hashFiles('conanfile.py') }}

      - name: Install Conan & Common config
        run: |
          python -m pip install conan==1.*
          conan config install https://github.com/conan-io/conanclientcert.git
          conan profile new --detect default
          conan profile update settings.build_type=${{matrix.build_type}} default
          conan profile update settings.compiler="Visual Studio" default
          conan profile update settings.compiler.version=17 default
          conan config set storage.path=$Env:GITHUB_WORKSPACE/conanCache

      - name: Conan Arch conditional config
        if: ${{matrix.platform == 'x86'}}
        run: |
          conan profile update settings.arch=x86 default
          conan profile update settings.arch_build=x86 default

      - name: Run Conan
        run: |
          md build
          cd build
          conan profile list
          conan install .. --build missing

      - name: Build
        run: |
          cmake --preset base_windows -S . -B build  -DEXIV2_ENABLE_FILESYSTEM_ACCESS=OFF -DEXIV2_BUILD_SAMPLES=OFF -DEXIV2_BUILD_UNIT_TESTS=OFF -DEXIV2_BUILD_EXIV2_COMMAND=OFF -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DBUILD_SHARED_LIBS=${{matrix.shared_libraries}}
          cmake --build build --parallel

      - name: Install
        run: |
          cmake --install build
